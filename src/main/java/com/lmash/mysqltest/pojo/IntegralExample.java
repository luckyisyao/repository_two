package com.lmash.mysqltest.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class IntegralExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public IntegralExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIntegralIdIsNull() {
            addCriterion("integral_id is null");
            return (Criteria) this;
        }

        public Criteria andIntegralIdIsNotNull() {
            addCriterion("integral_id is not null");
            return (Criteria) this;
        }

        public Criteria andIntegralIdEqualTo(Integer value) {
            addCriterion("integral_id =", value, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdNotEqualTo(Integer value) {
            addCriterion("integral_id <>", value, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdGreaterThan(Integer value) {
            addCriterion("integral_id >", value, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("integral_id >=", value, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdLessThan(Integer value) {
            addCriterion("integral_id <", value, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdLessThanOrEqualTo(Integer value) {
            addCriterion("integral_id <=", value, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdIn(List<Integer> values) {
            addCriterion("integral_id in", values, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdNotIn(List<Integer> values) {
            addCriterion("integral_id not in", values, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdBetween(Integer value1, Integer value2) {
            addCriterion("integral_id between", value1, value2, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIdNotBetween(Integer value1, Integer value2) {
            addCriterion("integral_id not between", value1, value2, "integralId");
            return (Criteria) this;
        }

        public Criteria andIntegralIsNull() {
            addCriterion("integral is null");
            return (Criteria) this;
        }

        public Criteria andIntegralIsNotNull() {
            addCriterion("integral is not null");
            return (Criteria) this;
        }

        public Criteria andIntegralEqualTo(Integer value) {
            addCriterion("integral =", value, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralNotEqualTo(Integer value) {
            addCriterion("integral <>", value, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralGreaterThan(Integer value) {
            addCriterion("integral >", value, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralGreaterThanOrEqualTo(Integer value) {
            addCriterion("integral >=", value, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralLessThan(Integer value) {
            addCriterion("integral <", value, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralLessThanOrEqualTo(Integer value) {
            addCriterion("integral <=", value, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralIn(List<Integer> values) {
            addCriterion("integral in", values, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralNotIn(List<Integer> values) {
            addCriterion("integral not in", values, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralBetween(Integer value1, Integer value2) {
            addCriterion("integral between", value1, value2, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralNotBetween(Integer value1, Integer value2) {
            addCriterion("integral not between", value1, value2, "integral");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorIsNull() {
            addCriterion("integral_behavior is null");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorIsNotNull() {
            addCriterion("integral_behavior is not null");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorEqualTo(Integer value) {
            addCriterion("integral_behavior =", value, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorNotEqualTo(Integer value) {
            addCriterion("integral_behavior <>", value, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorGreaterThan(Integer value) {
            addCriterion("integral_behavior >", value, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorGreaterThanOrEqualTo(Integer value) {
            addCriterion("integral_behavior >=", value, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorLessThan(Integer value) {
            addCriterion("integral_behavior <", value, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorLessThanOrEqualTo(Integer value) {
            addCriterion("integral_behavior <=", value, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorIn(List<Integer> values) {
            addCriterion("integral_behavior in", values, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorNotIn(List<Integer> values) {
            addCriterion("integral_behavior not in", values, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorBetween(Integer value1, Integer value2) {
            addCriterion("integral_behavior between", value1, value2, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralBehaviorNotBetween(Integer value1, Integer value2) {
            addCriterion("integral_behavior not between", value1, value2, "integralBehavior");
            return (Criteria) this;
        }

        public Criteria andIntegralDateIsNull() {
            addCriterion("integral_date is null");
            return (Criteria) this;
        }

        public Criteria andIntegralDateIsNotNull() {
            addCriterion("integral_date is not null");
            return (Criteria) this;
        }

        public Criteria andIntegralDateEqualTo(Date value) {
            addCriterion("integral_date =", value, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateNotEqualTo(Date value) {
            addCriterion("integral_date <>", value, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateGreaterThan(Date value) {
            addCriterion("integral_date >", value, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateGreaterThanOrEqualTo(Date value) {
            addCriterion("integral_date >=", value, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateLessThan(Date value) {
            addCriterion("integral_date <", value, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateLessThanOrEqualTo(Date value) {
            addCriterion("integral_date <=", value, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateIn(List<Date> values) {
            addCriterion("integral_date in", values, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateNotIn(List<Date> values) {
            addCriterion("integral_date not in", values, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateBetween(Date value1, Date value2) {
            addCriterion("integral_date between", value1, value2, "integralDate");
            return (Criteria) this;
        }

        public Criteria andIntegralDateNotBetween(Date value1, Date value2) {
            addCriterion("integral_date not between", value1, value2, "integralDate");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andInformationIsNull() {
            addCriterion("information is null");
            return (Criteria) this;
        }

        public Criteria andInformationIsNotNull() {
            addCriterion("information is not null");
            return (Criteria) this;
        }

        public Criteria andInformationEqualTo(String value) {
            addCriterion("information =", value, "information");
            return (Criteria) this;
        }

        public Criteria andInformationNotEqualTo(String value) {
            addCriterion("information <>", value, "information");
            return (Criteria) this;
        }

        public Criteria andInformationGreaterThan(String value) {
            addCriterion("information >", value, "information");
            return (Criteria) this;
        }

        public Criteria andInformationGreaterThanOrEqualTo(String value) {
            addCriterion("information >=", value, "information");
            return (Criteria) this;
        }

        public Criteria andInformationLessThan(String value) {
            addCriterion("information <", value, "information");
            return (Criteria) this;
        }

        public Criteria andInformationLessThanOrEqualTo(String value) {
            addCriterion("information <=", value, "information");
            return (Criteria) this;
        }

        public Criteria andInformationLike(String value) {
            addCriterion("information like", value, "information");
            return (Criteria) this;
        }

        public Criteria andInformationNotLike(String value) {
            addCriterion("information not like", value, "information");
            return (Criteria) this;
        }

        public Criteria andInformationIn(List<String> values) {
            addCriterion("information in", values, "information");
            return (Criteria) this;
        }

        public Criteria andInformationNotIn(List<String> values) {
            addCriterion("information not in", values, "information");
            return (Criteria) this;
        }

        public Criteria andInformationBetween(String value1, String value2) {
            addCriterion("information between", value1, value2, "information");
            return (Criteria) this;
        }

        public Criteria andInformationNotBetween(String value1, String value2) {
            addCriterion("information not between", value1, value2, "information");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x_integral
     *
     * @mbg.generated do_not_delete_during_merge Thu Oct 17 10:34:03 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x_integral
     *
     * @mbg.generated Thu Oct 17 10:34:03 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}